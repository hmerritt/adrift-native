name: App build

on:
    push:
        tags:
            - '[0-9]+.[0-9]+.[0-9]+'

jobs:
    test:
        uses: ./.github/workflows/core-test.yml
    build:
        needs: test
        strategy:
            fail-fast: false
            matrix:
                go-version: [1.22.0]
                node-version: [20.x]
                build:
                    - name: appBuild
                      platformShort: linux
                      platform: linux/amd64
                      os: ubuntu-latest
                    - name: appBuild
                      platformShort: windows
                      platform: windows/amd64
                      os: windows-latest
                    - name: appBuild
                      platformShort: darwin
                      platform: darwin/universal
                      os: macos-latest
        runs-on: ${{ matrix.build.os }}
        steps:
            - uses: actions/checkout@v4

            - name: Install Linux packages
              if: runner.os == 'Linux'
              run: |
                  sudo apt update
                  sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev gcc g++

            - name: Setup Go ${{ matrix.go-version }}
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Setup Yarn
              run: |
                  corepack enable
                  corepack prepare yarn@stable --activate
                  yarn set version 3.5.0

            - name: Prep frontend for build
              run: |
                  cd frontend
                  yarn install

            - name: Build app
              run: |
                  go install github.com/magefile/mage
                  mage -v bootstrap
                  mage -v build

            - name: Set binary variables
              id: binary_variables
              shell: bash
              run: |
                  case "${{ runner.os }}" in
                    Linux)
                      echo "::set-output name=binary_path::adrift-native"
                      echo "::set-output name=binary_name::adrift-native"
                      echo "::set-output name=binary_suffix::"
                      ;;
                    Windows)
                      echo "::set-output name=binary_path::adrift-native.exe"
                      echo "::set-output name=binary_name::adrift-native"
                      echo "::set-output name=binary_suffix::.exe"
                      ;;
                    macOS)
                      echo "::set-output name=binary_path::Adrift Native.app/Contents/MacOS/Adrift Native"
                      echo "::set-output name=binary_name::adrift-native"
                      echo "::set-output name=binary_suffix::"
                      ;;
                  esac

            - name: Upload binary artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ steps.binary_variables.outputs.binary_name }}-${{ matrix.build.platformShort }}${{ matrix.build.binary_suffix }}
                  path: ./build/bin/${{ steps.binary_variables.outputs.binary_path }}
                  # ./build/bin/adrift-native
                  # ./build/bin/adrift-native.exe
                  # ./build/bin/Adrift Native.app/Contents/MacOS/Adrift Native

    #
    # Create github release and upload binary
    #
    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download binary artifacts
              uses: actions/download-artifact@v4
              with:
                  path: adrift-native
                  pattern: adrift-native-*
                  merge-multiple: true
            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  name: Release v${{ github.ref }}
                  draft: true
                  prerelease: false
                  files: |
                      adrift-native/adrift-native-darwin
                      adrift-native/adrift-native-linux
                      adrift-native/adrift-native-windows.exe

            - name: Download artifacts
              uses: actions/download-artifact@v2
