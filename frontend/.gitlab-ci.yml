stages:
    - test
    - build
    - deploy

variables:
    NOMAD_ADDR: $NOMAD_ADDR
    PERSONAL_ACCESS_TOKEN: $PERSONAL_ACCESS_TOKEN
    npm_config_cache: "$CI_PROJECT_DIR/.npm"

# Define a hidden job to be used with extends
# Better than default to avoid activating cache for all jobs
.dependencies_cache:
    cache:
        key:
            files:
                - yarn.lock
        paths:
            - .yarn
        policy: pull

#
# Test
#
test:
    stage: test
    image: node:20-alpine
    extends: .dependencies_cache
    cache:
        policy: pull-push
    before_script:
        - apk update && apk add git bash
        - yarn install
    script:
        - yarn test:coverage
        - unset CI
        - yarn build
    coverage: /All\sfiles.*?\s+(\d+.\d+)/

test-e2e:
    stage: test
    image: node:20
    extends: .dependencies_cache
    before_script:
        - apk update && apk add git bash
        - yarn install
        - yarn test:e2e:setup
    script:
        - yarn test:e2e

#
# Build
#
build:
    stage: build
    image: docker:19.03.1
    extends: .dependencies_cache
    cache:
        policy: pull
    rules:
        - if: "$CI_COMMIT_TAG"
          when: on_success
        - when: never
    services:
        - name: docker:19.03.1-dind
          command: ["--experimental"]
    before_script:
        - apk update && apk add git bash
        - yarn install
        - yarn build
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -t $CI_REGISTRY/hmerritt/adrift:$CI_COMMIT_TAG -t $CI_REGISTRY/hmerritt/adrift:latest .
        - docker push $CI_REGISTRY/hmerritt/adrift

    after_script:
        - docker logout
#
# Deploy
#
deploy:
    stage: deploy
    image: alpine:3.16.0
    rules:
        - if: "$CI_COMMIT_TAG"
          when: on_success
        - when: never
    script:
        - apk add nomad gettext
        - envsubst '${CI_REGISTRY} ${CI_COMMIT_TAG} ${CI_REGISTRY_USER} ${PERSONAL_ACCESS_TOKEN}' < project.nomad > job.nomad
        # - cat job.nomad
        - nomad validate job.nomad
        - nomad plan job.nomad || if [ $? -eq 255 ]; then exit 255; else echo "success"; fi
        - nomad run job.nomad
    environment:
        name: production
    allow_failure: false
